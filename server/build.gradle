import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

plugins {
    id("groovy") 
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.4.4"
    id("io.micronaut.aot") version "4.4.5"
}

version = "1.0.0"
group = "com.foodorder.server"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
    annotationProcessor("io.micronaut.validation:micronaut-validation-processor")
    implementation("io.micrometer:context-propagation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.18.2'
    runtimeOnly 'com.fasterxml.jackson.module:jackson-modules-java8:2.18.2'
    implementation("io.micronaut.aws:micronaut-aws-sdk-v2")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.security:micronaut-security-oauth2")
    implementation("io.micronaut.validation:micronaut-validation")
    implementation("jakarta.validation:jakarta.validation-api")
    implementation("io.micronaut.security:micronaut-security-jwt")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.yaml:snakeyaml")
    aotPlugins platform("io.micronaut.platform:micronaut-platform:4.7.4")
    aotPlugins("io.micronaut.security:micronaut-security-aot")
    implementation("io.micronaut:micronaut-management")
    implementation("software.amazon.awssdk:dynamodb-enhanced")
    testImplementation 'net.bytebuddy:byte-buddy:1.15.11'
    testImplementation 'org.objenesis:objenesis:3.4'
}


application {
    mainClass.set("com.foodorder.server.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}


graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        annotations("com.foodorder.server.*")
    }
    aot {
    // Please review carefully the optimizations enabled below
    // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
        configurationProperties.put("micronaut.security.jwks.enabled","false")
        configurationProperties.put("micronaut.security.openid-configuration.enabled","false")
    }
}

tasks.named("dockerfile") {
    baseImage("eclipse-temurin:17-jre-jammy")
}

// https://github.com/bmuschko/gradle-docker-plugin?tab=readme-ov-file
tasks.named("dockerBuild", DockerBuildImage) {
    images.set(["sharedfoodorder"])
}


tasks.register('integrationTest', Test) {
    group = "verification"
    doFirst {
        environment("requireIntegrationTests", "true")
        environment("AWS_REGION", "eu-west-1")
    }

    filter {
        includeTestsMatching("com.thebotmeek.foodorder.server.integration.*")
    }
}


