version: '3.8'


networks:
  localstack-network:
    external: false

services:
  localstack:
    container_name: 'localstack'
    image: "localstack/localstack:stable"
    ports:
      - "4566:4566"
    networks:
      - localstack-network
    environment:
      - SERVICES=dynamodb,ssm,sts,cloudformation,iam,lambda,apigateway,sts
      - DYNAMODB_SHARE_DB=1
      - LAMBDA_REMOVE_CONTAINERS=0
      - MICRONAUT_ENVIRONMENTS=${MICRONAUT_ENVIRONMENTS:-mock_auth}
      - STATELESS_SESSION_AUTH=${STATELESS_SESSION_AUTH:-false}
    volumes:
      - "./local_stack:/etc/localstack/init/ready.d"
      - "./CDK:/CDK"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./lambda-handler/build/libs:/builds/restApiHandler/"
  proxy:
    image: nginx:alpine
    networks:
      - localstack-network
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - food-order-server
      - menu-parser
      - client
  food-order-server:
    image: "sharedfoodorder:latest"
    hostname: core-api
    networks:
      - localstack-network
    environment:
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID:-123}"
      AWS_SECRET_KEY: "${AWS_SECRET_KEY:-123}"
      DYNAMODB_DOMAIN: "localstack"
      MICRONAUT_ENVIRONMENTS: "${MICRONAUT_ENVIRONMENTS:-mock_auth}"
      STATELESS_SESSION_AUTH: "${STATELESS_SESSION_AUTH:-false}"
      OAUTH_CLIENT_ID: "${OAUTH_CLIENT_ID}"
      OAUTH_CLIENT_SECRET: "${OAUTH_CLIENT_SECRET}"
      OAUTH_DOMAIN: "${OAUTH_DOMAIN}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    deploy:
      replicas: ${FOOD_ORDER_REPLICAS:-1}
    depends_on:
      - localstack
  menu-parser:
    image: "menu-parser:latest"
    hostname: "menu-parser"
    networks:
      - localstack-network
    environment:
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID:-123}"
      AWS_SECRET_KEY: "${AWS_SECRET_KEY:-123}"
      DYNAMODB_DOMAIN: "localstack"
      MICRONAUT_ENVIRONMENTS: "${MICRONAUT_ENVIRONMENTS:-mock_auth}"
      STATELESS_SESSION_AUTH: "${STATELESS_SESSION_AUTH:-false}"
      OPEN_AI_API_KEY: "${OPEN_AI_API_KEY}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 5s
    depends_on:
      - localstack
  client:
    image: food-order-client
    hostname: food-order-client
    networks:
      - localstack-network