import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

plugins {
    id("groovy")
    id("com.gradleup.shadow") version "8.3.6"
    id("io.micronaut.application") version "4.5.4"
    id("io.micronaut.aot") version "4.5.4"
}

version = "0.1"
group = "com.thebotmeek"

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':core')
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    annotationProcessor("io.micronaut.validation:micronaut-validation-processor")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.19.1'
    runtimeOnly 'com.fasterxml.jackson.module:jackson-modules-java8:2.19.1'
    implementation("io.micronaut.validation:micronaut-validation")
    implementation("jakarta.validation:jakarta.validation-api")
    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation 'org.docx4j:docx4j-core:11.5.3'
    annotationProcessor("io.micronaut.langchain4j:micronaut-langchain4j-processor")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut.langchain4j:micronaut-langchain4j-openai")
    implementation("software.amazon.awssdk:dynamodb-enhanced")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'
    implementation 'javax.activation:activation:1.1.1'
    implementation('org.glassfish.jaxb:jaxb-runtime:2.3.9')
    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.5'
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.yaml:snakeyaml")
    testImplementation("io.micronaut:micronaut-http-client")
    testImplementation 'net.bytebuddy:byte-buddy:1.17.6'
    testImplementation 'org.objenesis:objenesis:3.4'
}


application {
    mainClass = "com.thebotmeek.menuparser.Application"
}
java {
    sourceCompatibility = JavaVersion.toVersion("21")
    targetCompatibility = JavaVersion.toVersion("21")
}


graalvmNative.toolchainDetection = false

micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        annotations("com.thebotmeek.menuparser.*")
    }
    aot {
        // Please review carefully the optimizations enabled below
        // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
        replaceLogbackXml = true
    }
}


tasks.named("dockerfile") {
    baseImage("eclipse-temurin:21-jre-jammy")
}

tasks.named("dockerBuild", DockerBuildImage) {
    images.set(["menu-parser"])
}

tasks.register('integrationTest', Test) {
    group = "verification"
    doFirst {
        environment("requireIntegrationTests", "true")
        environment("AWS_REGION", "eu-west-1")
    }

    filter {
        includeTestsMatching("com.thebotmeek.menuparser.integration.*")
    }
}


